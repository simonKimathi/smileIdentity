package selfie.Service;

import smile.identity.core.*;

import static selfie.util.Constants.*;

public class SelfieService {

    public String registerSelfie(String userId,String jobId){

        try {
            PartnerParameters partnerParameters = new PartnerParameters(userId, jobId, 2);
            //job types
            /*1
            Register with ID
            Verify an ID
            Take a Selfie
            Compare the Selfie with the ID Authority Photo
            2
            Authenticate
            Take a Selfie
            Compare the Selfie with the Selfie provided during a successful Registration
            4
            Register without ID
            Take a Selfie
            5
            ID Validation
            Verify an ID
            8
            Update Photo
            Take a Selfie
            Compare the Selfie with the Selfie provided during a successful Registration
            */

            partnerParameters.add("optional_info", "some optional info");

            // Note dob is only required for VOTER_ID, DRIVERS_LICENSE, NATIONAL_ID, TIN, and CAC. For the rest of the id types you can send through dob as null or empty.
            IDParameters idInfo = new IDParameters("SIMON", "MUNGIRIA", "KIMATHI", "KE", "NATIONAL_ID", "35848896", "12/18/1996", "0741753780", "true");

            // Create image list
            // Set the imageTypeId as an Integer using the following table
            // 0 - Selfie image jpg or png
            // 1 - ID card image jpg or png
            // 2 - Selfie image jpg or png base64 encoded
            // 3 - ID card image jpg or png base 64 encoded
            String inputFilePath = "/home/symoh/workspace/smileIdentity/simon.png";  //dark
//            ClassLoader classLoader = getClass().getClassLoader();
//            File inputFile = new File(classLoader
//                    .getResource(inputFilePath)
//                    .getFile());
//            byte[] fileContent = FileUtils.readFileToByteArray(inputFile);
//            String encodedString = Base64
//                    .getEncoder()
//                    .encodeToString(fileContent);
            /*light*/
            String img="";
//            System.out.println(encodedString);
            ImageParameters imageParameters = new ImageParameters();
            imageParameters.add(0, inputFilePath);

            Options options = new Options(CALLBACK, true, true, true);

            WebApi connection = new WebApi(PARTNER_ID, CALLBACK, DECODED_API_KEY, TEST_SERVER_ID); //0-test, 1--development

            String response = connection.submit_job(partnerParameters.get(), imageParameters.get(), idInfo.get(), options.get());
            System.out.println("\n Response" + response);
            return response;


        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public String processSelfie(ProcessSelfieDto processSelfieDto){

        try {
            PartnerParameters partnerParameters = new PartnerParameters(processSelfieDto.getUserId(), processSelfieDto.getJobId(), processSelfieDto.getJobType());
            //job types
            /*1
            Register with ID
            Verify an ID
            Take a Selfie
            Compare the Selfie with the ID Authority Photo
            2
            Authenticate
            Take a Selfie
            Compare the Selfie with the Selfie provided during a successful Registration
            4
            Register without ID
            Take a Selfie
            5
            ID Validation
            Verify an ID
            8
            Update Photo
            Take a Selfie
            Compare the Selfie with the Selfie provided during a successful Registration
            */

            partnerParameters.add("optional_info", "some optional info");

            // Note dob is only required for VOTER_ID, DRIVERS_LICENSE, NATIONAL_ID, TIN, and CAC. For the rest of the id types you can send through dob as null or empty.
            IDParameters idInfo = new IDParameters(processSelfieDto.getIdFirstName(),
                    processSelfieDto.getIdMiddleName(),
                    processSelfieDto.getIdLastName(),
                    processSelfieDto.getIdCountry(),
                    processSelfieDto.getIdType(),
                    processSelfieDto.getIdNumber(),
                    processSelfieDto.getIdDob(),
                    processSelfieDto.getIdPhoneNumber(),
                    processSelfieDto.getIdConfirmed());

            // Create image list
            // Set the imageTypeId as an Integer using the following table
            // 0 - Selfie image jpg or png
            // 1 - ID card image jpg or png
            // 2 - Selfie image jpg or png base64 encoded
            // 3 - ID card image jpg or png base 64 encoded
            ImageParameters imageParameters = new ImageParameters();
            imageParameters.add(processSelfieDto.getImageType(), processSelfieDto.getImage());

            Options options = new Options(CALLBACK, true, true, true);

            WebApi connection = new WebApi(PARTNER_ID, CALLBACK, DECODED_API_KEY, TEST_SERVER_ID); //0-test, 1--development

            String response = connection.submit_job(partnerParameters.get(), imageParameters.get(), idInfo.get(), options.get());
            System.out.println("\n Response" + response);
            return response;


        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
}
